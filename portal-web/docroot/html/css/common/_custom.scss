@mixin border-radius($radii) {
	@include prefixer(border-radius, $radii, spec);
}

@mixin border-top-left-radius($radii) {
	@include prefixer(border-top-left-radius, $radii, spec);
}

@mixin border-top-right-radius($radii) {
	@include prefixer(border-top-right-radius, $radii, spec);
}

@mixin border-bottom-left-radius($radii) {
	@include prefixer(border-bottom-left-radius, $radii, spec);
}

@mixin border-bottom-right-radius($radii) {
	@include prefixer(border-bottom-right-radius, $radii, spec);
}

@mixin box-shadow ($shadows...) {
	@include prefixer(box-shadow, $shadows, webkit moz ms o spec);
}

$experimental-support-for-mozilla: true !default;
$experimental-support-for-webkit: true !default;
$experimental-support-for-opera: true !default;
$experimental-support-for-microsoft: true !default;
$experimental-support-for-khtml: false !default;

@mixin experimental($property, $value,
	$moz      : $experimental-support-for-mozilla,
	$webkit   : $experimental-support-for-webkit,
	$o        : $experimental-support-for-opera,
	$ms       : $experimental-support-for-microsoft,
	$khtml    : $experimental-support-for-khtml,
	$official : true
) {
	@if $webkit  and $experimental-support-for-webkit    { -webkit-#{$property} : $value; }
	@if $khtml   and $experimental-support-for-khtml     {  -khtml-#{$property} : $value; }
	@if $moz     and $experimental-support-for-mozilla   {    -moz-#{$property} : $value; }
	@if $ms      and $experimental-support-for-microsoft {     -ms-#{$property} : $value; }
	@if $o       and $experimental-support-for-opera     {      -o-#{$property} : $value; }
	@if $official                                        {         #{$property} : $value; }
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie);
}

@mixin text-shadow ($shadows...) {
	@include prefixer(text-shadow, $shadows, webkit moz ms o spec);
}